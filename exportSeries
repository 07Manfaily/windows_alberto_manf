import React, { useState } from 'react';

const FormationEvaluationDashboard = () => {
  const [filters, setFilters] = useState({
    formation: '',
    username: '',
    sessions: ''
  });
  const [formationSearch, setFormationSearch] = useState('');
  const [sessionsSearch, setSessionsSearch] = useState('');

  // Composant pour les graphiques circulaires modernes
  const ModernCircularChart = ({ percentage, title, isStriped = false, color = '#10b981' }) => {
    const circumference = 2 * Math.PI * 50;
    const strokeDasharray = circumference;
    const strokeDashoffset = circumference - (percentage / 100) * circumference;

    return (
      <div style={{
        backgroundColor: 'rgba(255, 255, 255, 0.7)',
        backdropFilter: 'blur(20px)',
        borderRadius: '24px',
        padding: '28px',
        boxShadow: '0 8px 40px rgba(0, 0, 0, 0.08)',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        transition: 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)',
        position: 'relative',
        overflow: 'hidden',
        width: '220px',
        height: '240px',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center'
      }}
      onMouseEnter={(e) => {
        e.currentTarget.style.transform = 'translateY(-12px) scale(1.02)';
        e.currentTarget.style.boxShadow = '0 20px 60px rgba(0, 0, 0, 0.12)';
        e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';
      }}
      onMouseLeave={(e) => {
        e.currentTarget.style.transform = 'translateY(0px) scale(1)';
        e.currentTarget.style.boxShadow = '0 8px 40px rgba(0, 0, 0, 0.08)';
        e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.7)';
      }}
      >
        {/* Subtle gradient accent */}
        <div style={{
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          height: '4px',
          background: `linear-gradient(90deg, ${color} 0%, ${color}80 100%)`,
          borderRadius: '24px 24px 0 0'
        }}></div>
        
        <div style={{ position: 'relative', marginBottom: '20px', zIndex: 2 }}>
          <svg width="140" height="140" style={{ transform: 'rotate(-90deg)' }}>
            <defs>
              <filter id="softGlow">
                <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
                <feMerge> 
                  <feMergeNode in="coloredBlur"/>
                  <feMergeNode in="SourceGraphic"/> 
                </feMerge>
              </filter>
            </defs>
            <circle
              cx="70"
              cy="70"
              r="50"
              fill="none"
              stroke="#f1f5f9"
              strokeWidth="8"
            />
            <circle
              cx="70"
              cy="70"
              r="50"
              fill="none"
              stroke={color}
              strokeWidth="8"
              strokeDasharray={strokeDasharray}
              strokeDashoffset={strokeDashoffset}
              strokeLinecap="round"
              filter="url(#softGlow)"
              style={{
                transition: 'all 1.2s cubic-bezier(0.4, 0, 0.2, 1)',
                ...(isStriped && {
                  strokeDasharray: '6,3',
                  animation: 'gentleDash 3s linear infinite'
                })
              }}
            />
          </svg>
          <div style={{
            position: 'absolute',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            fontSize: '28px',
            fontWeight: '700',
            color: '#1e293b',
            fontFamily: '"Inter", sans-serif'
          }}>
            {percentage}%
          </div>
        </div>
        <div style={{
          textAlign: 'center',
          fontSize: '14px',
          color: '#475569',
          fontWeight: '500',
          lineHeight: '1.3',
          fontFamily: '"Inter", sans-serif',
          zIndex: 2,
          maxWidth: '180px'
        }}>
          {title}
        </div>
      </div>
    );
  };

  // Composant Word Cloud moderne
  const ModernWordCloud = () => {
    const words = [
      { text: 'int√©ressante', size: 28, color: '#64748b', weight: 'bold' },
      { text: 'ensemble', size: 20, color: '#475569', weight: 'medium' },
      { text: 'initier', size: 36, color: '#334155', weight: 'bold' },
      { text: 'travail', size: 32, color: '#64748b', weight: 'bold' },
      { text: 'formation', size: 24, color: '#475569', weight: 'semibold' },
      { text: 'r√©sum√©', size: 18, color: '#64748b', weight: 'medium' },
      { text: 'possible', size: 22, color: '#475569', weight: 'semibold' },
      { text: 'sph√©riques', size: 16, color: '#64748b', weight: 'medium' },
      { text: '√©volu√©', size: 18, color: '#475569', weight: 'medium' },
      { text: 'bonne', size: 20, color: '#64748b', weight: 'medium' },
      { text: 'supports', size: 16, color: '#94a3b8', weight: 'normal' },
      { text: 'aussi', size: 14, color: '#94a3b8', weight: 'normal' },
      { text: 'poste', size: 26, color: '#475569', weight: 'semibold' },
      { text: 'entier', size: 18, color: '#64748b', weight: 'medium' },
      { text: 'seulement', size: 14, color: '#94a3b8', weight: 'normal' },
      { text: 'mettre', size: 16, color: '#94a3b8', weight: 'normal' },
      { text: 'partir', size: 14, color: '#94a3b8', weight: 'normal' },
      { text: 'th√©orie', size: 18, color: '#475569', weight: 'medium' },
      { text: 'pratiques', size: 22, color: '#64748b', weight: 'semibold' },
      { text: 'temps', size: 16, color: '#94a3b8', weight: 'normal' },
      { text: 'traitement', size: 16, color: '#475569', weight: 'medium' }
    ];

    return (
      <div style={{
        background: 'rgba(255, 255, 255, 0.6)',
        backdropFilter: 'blur(20px)',
        borderRadius: '24px',
        padding: '32px',
        boxShadow: '0 12px 48px rgba(0, 0, 0, 0.08)',
        border: '1px solid rgba(255, 255, 255, 0.4)',
        minHeight: '320px',
        position: 'relative',
        overflow: 'hidden'
      }}>
        {/* Subtle decorative elements */}
        <div style={{
          position: 'absolute',
          top: '-10px',
          right: '-10px',
          width: '80px',
          height: '80px',
          borderRadius: '50%',
          background: 'linear-gradient(135deg, rgba(148, 163, 184, 0.1) 0%, rgba(203, 213, 225, 0.05) 100%)',
          filter: 'blur(1px)'
        }}></div>

        <h3 style={{
          margin: '0 0 28px 0',
          fontSize: '20px',
          fontWeight: '700',
          color: '#1e293b',
          textAlign: 'center',
          fontFamily: '"Inter", sans-serif',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          gap: '12px'
        }}>
          <span style={{ fontSize: '24px' }}>üí¨</span>
          Commentaires et Suggestions
        </h3>
        
        <div style={{ 
          display: 'flex', 
          flexWrap: 'wrap', 
          alignItems: 'center', 
          justifyContent: 'center', 
          gap: '16px',
          position: 'relative',
          zIndex: 2
        }}>
          {words.map((word, index) => (
            <span
              key={index}
              style={{
                fontSize: `${word.size}px`,
                color: word.color,
                fontWeight: word.weight === 'bold' ? '700' : word.weight === 'semibold' ? '600' : word.weight === 'medium' ? '500' : '400',
                margin: '6px',
                lineHeight: '1.2',
                fontFamily: '"Inter", sans-serif',
                transition: 'all 0.3s ease',
                cursor: 'pointer',
                padding: '6px 12px',
                borderRadius: '12px'
              }}
              onMouseEnter={(e) => {
                e.target.style.transform = 'scale(1.15)';
                e.target.style.backgroundColor = 'rgba(148, 163, 184, 0.15)';
                e.target.style.color = '#1e293b';
              }}
              onMouseLeave={(e) => {
                e.target.style.transform = 'scale(1)';
                e.target.style.backgroundColor = 'transparent';
                e.target.style.color = word.color;
              }}
            >
              {word.text}
            </span>
          ))}
        </div>
      </div>
    );
  };

  // Composant Filtres moderne
  const ModernFiltersPanel = () => {
    const formations = [
      'Programme de Management Avanc√©',
      'Formation Leadership & Innovation',
      'Gestion de Projet Agile',
      'Communication Interpersonnelle',
      'D√©veloppement Commercial Digital'
    ];

    const sessions = [
      'Session Avril 2023',
      'Session Mai 2023', 
      'Session Juin 2023',
      'Session Septembre 2023',
      'Session Octobre 2023'
    ];

    const filteredFormations = formations.filter(formation => 
      formation.toLowerCase().includes(formationSearch.toLowerCase())
    );

    const filteredSessions = sessions.filter(session => 
      session.toLowerCase().includes(sessionsSearch.toLowerCase())
    );

    const FilterSection = ({ title, children, icon }) => (
      <div style={{
        backgroundColor: 'rgba(255, 255, 255, 0.8)',
        backdropFilter: 'blur(16px)',
        borderRadius: '16px',
        padding: '20px',
        marginBottom: '20px',
        boxShadow: '0 4px 24px rgba(0, 0, 0, 0.06)',
        border: '1px solid rgba(255, 255, 255, 0.4)',
        transition: 'all 0.3s ease'
      }}>
        <div style={{
          display: 'flex',
          alignItems: 'center',
          gap: '10px',
          marginBottom: '16px'
        }}>
          <span style={{ fontSize: '18px' }}>{icon}</span>
          <label style={{
            fontSize: '15px',
            fontWeight: '600',
            color: '#334155',
            fontFamily: '"Inter", sans-serif'
          }}>
            {title}
          </label>
        </div>
        {children}
      </div>
    );

    return (
      <div style={{
        background: 'rgba(255, 255, 255, 0.5)',
        backdropFilter: 'blur(20px)',
        borderRadius: '24px',
        padding: '28px',
        position: 'sticky',
        top: '20px',
        border: '1px solid rgba(255, 255, 255, 0.4)',
        boxShadow: '0 12px 48px rgba(0, 0, 0, 0.08)'
      }}>
        <h3 style={{
          margin: '0 0 28px 0',
          fontSize: '20px',
          fontWeight: '700',
          color: '#1e293b',
          textAlign: 'center',
          fontFamily: '"Inter", sans-serif',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          gap: '12px'
        }}>
          <span style={{ fontSize: '24px' }}>üîç</span>
          Filtres Intelligents
        </h3>
        
        {/* Formation Filter */}
        <FilterSection title="Formation" icon="üìö">
          <input
            type="text"
            placeholder="Rechercher une formation..."
            value={formationSearch}
            onChange={(e) => setFormationSearch(e.target.value)}
            style={{
              width: '100%',
              padding: '12px 16px',
              borderRadius: '12px',
              border: '2px solid rgba(148, 163, 184, 0.3)',
              fontSize: '14px',
              backgroundColor: 'rgba(255, 255, 255, 0.8)',
              marginBottom: '8px',
              fontFamily: '"Inter", sans-serif',
              transition: 'all 0.3s ease',
              outline: 'none'
            }}
            onFocus={(e) => {
              e.target.style.borderColor = '#475569';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 1)';
            }}
            onBlur={(e) => {
              e.target.style.borderColor = 'rgba(148, 163, 184, 0.3)';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
            }}
          />
          {formationSearch && (
            <div style={{
              maxHeight: '120px',
              overflowY: 'auto',
              border: '2px solid rgba(148, 163, 184, 0.2)',
              borderRadius: '12px',
              backgroundColor: 'rgba(255, 255, 255, 0.9)',
              marginBottom: '12px',
              boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08)'
            }}>
              {filteredFormations.map((formation, index) => (
                <div
                  key={index}
                  onClick={() => {
                    setFilters({...filters, formation});
                    setFormationSearch('');
                  }}
                  style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                    borderBottom: index < filteredFormations.length - 1 ? '1px solid rgba(148, 163, 184, 0.2)' : 'none',
                    fontSize: '13px',
                    backgroundColor: filters.formation === formation ? 'rgba(148, 163, 184, 0.1)' : 'transparent',
                    fontFamily: '"Inter", sans-serif',
                    transition: 'all 0.2s ease'
                  }}
                  onMouseEnter={(e) => e.target.style.backgroundColor = 'rgba(148, 163, 184, 0.15)'}
                  onMouseLeave={(e) => e.target.style.backgroundColor = filters.formation === formation ? 'rgba(148, 163, 184, 0.1)' : 'transparent'}
                >
                  {formation}
                </div>
              ))}
            </div>
          )}
          <div style={{
            background: 'linear-gradient(135deg, #475569 0%, #334155 100%)',
            color: '#ffffff',
            padding: '12px',
            borderRadius: '12px',
            textAlign: 'center',
            fontSize: '18px',
            fontWeight: '700',
            fontFamily: '"Inter", sans-serif',
            boxShadow: '0 4px 16px rgba(71, 85, 105, 0.3)'
          }}>
            25 / 27
          </div>
        </FilterSection>

        {/* Sessions Filter */}
        <FilterSection title="Sessions" icon="üìÖ">
          <input
            type="text"
            placeholder="Rechercher une session..."
            value={sessionsSearch}
            onChange={(e) => setSessionsSearch(e.target.value)}
            style={{
              width: '100%',
              padding: '12px 16px',
              borderRadius: '12px',
              border: '2px solid rgba(148, 163, 184, 0.3)',
              fontSize: '14px',
              backgroundColor: 'rgba(255, 255, 255, 0.8)',
              marginBottom: '8px',
              fontFamily: '"Inter", sans-serif',
              transition: 'all 0.3s ease',
              outline: 'none'
            }}
            onFocus={(e) => {
              e.target.style.borderColor = '#64748b';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 1)';
            }}
            onBlur={(e) => {
              e.target.style.borderColor = 'rgba(148, 163, 184, 0.3)';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
            }}
          />
          {sessionsSearch && (
            <div style={{
              maxHeight: '120px',
              overflowY: 'auto',
              border: '2px solid rgba(148, 163, 184, 0.2)',
              borderRadius: '12px',
              backgroundColor: 'rgba(255, 255, 255, 0.9)',
              marginBottom: '12px',
              boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08)'
            }}>
              {filteredSessions.map((session, index) => (
                <div
                  key={index}
                  onClick={() => {
                    setFilters({...filters, sessions: session});
                    setSessionsSearch('');
                  }}
                  style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                    borderBottom: index < filteredSessions.length - 1 ? '1px solid rgba(148, 163, 184, 0.2)' : 'none',
                    fontSize: '13px',
                    backgroundColor: filters.sessions === session ? 'rgba(100, 116, 139, 0.1)' : 'transparent',
                    fontFamily: '"Inter", sans-serif',
                    transition: 'all 0.2s ease'
                  }}
                  onMouseEnter={(e) => e.target.style.backgroundColor = 'rgba(100, 116, 139, 0.15)'}
                  onMouseLeave={(e) => e.target.style.backgroundColor = filters.sessions === session ? 'rgba(100, 116, 139, 0.1)' : 'transparent'}
                >
                  {session}
                </div>
              ))}
            </div>
          )}
          <div style={{
            background: 'linear-gradient(135deg, #64748b 0%, #475569 100%)',
            color: '#ffffff',
            padding: '12px',
            borderRadius: '12px',
            textAlign: 'center',
            fontSize: '18px',
            fontWeight: '700',
            fontFamily: '"Inter", sans-serif',
            boxShadow: '0 4px 16px rgba(100, 116, 139, 0.3)'
          }}>
            25 / 27
          </div>
        </FilterSection>

        {/* Username Filter */}
        <FilterSection title="Utilisateur" icon="üë§">
          <input
            type="text"
            placeholder="Rechercher un utilisateur..."
            value={filters.username}
            onChange={(e) => setFilters({...filters, username: e.target.value})}
            style={{
              width: '100%',
              padding: '12px 16px',
              borderRadius: '12px',
              border: '2px solid rgba(148, 163, 184, 0.3)',
              fontSize: '14px',
              backgroundColor: 'rgba(255, 255, 255, 0.8)',
              marginBottom: '12px',
              fontFamily: '"Inter", sans-serif',
              transition: 'all 0.3s ease',
              outline: 'none'
            }}
            onFocus={(e) => {
              e.target.style.borderColor = '#334155';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 1)';
            }}
            onBlur={(e) => {
              e.target.style.borderColor = 'rgba(148, 163, 184, 0.3)';
              e.target.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
            }}
          />
          <div style={{
            background: 'linear-gradient(135deg, #334155 0%, #1e293b 100%)',
            minHeight: '50px',
            borderRadius: '12px',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            color: '#ffffff',
            fontSize: '13px',
            fontWeight: '500',
            fontFamily: '"Inter", sans-serif',
            boxShadow: '0 4px 16px rgba(51, 65, 85, 0.3)',
            padding: '12px'
          }}>
            {filters.username || 'üîç Aucun utilisateur s√©lectionn√©'}
          </div>
        </FilterSection>
      </div>
    );
  };

  const chartColors = ['#475569', '#64748b', '#334155', '#94a3b8', '#1e293b'];

  return (
    <div style={{
      fontFamily: '"Inter", sans-serif',
      background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',
      minHeight: '100vh',
      position: 'relative'
    }}>
      {/* Subtle background pattern */}
      <div style={{
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundImage: 'radial-gradient(circle at 1px 1px, rgba(148, 163, 184, 0.15) 1px, transparent 0)',
        backgroundSize: '20px 20px',
        pointerEvents: 'none'
      }}></div>

      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 340px',
        gap: '32px',
        padding: '32px',
        position: 'relative',
        zIndex: 1
      }}>
        {/* Main Content */}
        <div>
          {/* Header */}
          <div style={{
            background: 'rgba(255, 255, 255, 0.8)',
            backdropFilter: 'blur(20px)',
            color: '#1e293b',
            padding: '32px',
            borderRadius: '24px',
            marginBottom: '32px',
            boxShadow: '0 12px 48px rgba(0, 0, 0, 0.08)',
            border: '1px solid rgba(255, 255, 255, 0.4)',
            position: 'relative',
            overflow: 'hidden'
          }}>
            <div style={{
              position: 'absolute',
              top: '-30px',
              right: '-30px',
              width: '150px',
              height: '150px',
              borderRadius: '50%',
              background: 'linear-gradient(45deg, rgba(148, 163, 184, 0.1) 0%, rgba(203, 213, 225, 0.05) 100%)',
              filter: 'blur(2px)'
            }}></div>
            <h1 style={{
              margin: '0',
              fontSize: '28px',
              fontWeight: '800',
              textAlign: 'center',
              letterSpacing: '-0.02em',
              position: 'relative',
              zIndex: 2,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '16px'
            }}>
              <span style={{ fontSize: '32px' }}>üìä</span>
              ANALYSE DES √âVALUATIONS √Ä CHAUD
            </h1>
            <p style={{
              margin: '12px 0 0 0',
              fontSize: '16px',
              textAlign: 'center',
              opacity: 0.7,
              position: 'relative',
              zIndex: 2,
              fontWeight: '500'
            }}>
              Tableau de bord interactif des formations
            </p>
          </div>

          {/* Module Info */}
          <div style={{
            background: 'rgba(255, 255, 255, 0.8)',
            backdropFilter: 'blur(20px)',
            borderRadius: '20px',
            padding: '28px',
            marginBottom: '32px',
            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08)',
            border: '1px solid rgba(255, 255, 255, 0.4)',
            display: 'grid',
            gridTemplateColumns: '1fr auto',
            gap: '28px',
            alignItems: 'center'
          }}>
            <div style={{ color: '#1e293b' }}>
              <div style={{ marginBottom: '12px', fontSize: '15px', display: 'flex', alignItems: 'center', gap: '10px', fontWeight: '500' }}>
                <span style={{ fontSize: '18px' }}>üìö</span> <strong>Module:</strong> Programme de Management Avanc√©
              </div>
              <div style={{ marginBottom: '12px', fontSize: '15px', display: 'flex', alignItems: 'center', gap: '10px', fontWeight: '500' }}>
                <span style={{ fontSize: '18px' }}>üè¢</span> <strong>Cabinet:</strong> ESSEC Executive School
              </div>
              <div style={{ marginBottom: '12px', fontSize: '15px', display: 'flex', alignItems: 'center', gap: '10px', fontWeight: '500' }}>
                <span style={{ fontSize: '18px' }}>üìç</span> <strong>Lieu:</strong> Abidjan
              </div>
              <div style={{ fontSize: '15px', display: 'flex', alignItems: 'center', gap: '10px', fontWeight: '500' }}>
                <span style={{ fontSize: '18px' }}>üìÖ</span> <strong>P√©riode:</strong> Avril - Octobre 2023
              </div>
            </div>
            <div style={{
              background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',
              padding: '28px 36px',
              borderRadius: '20px',
              textAlign: 'center',
              color: 'white',
              boxShadow: '0 8px 32px rgba(30, 41, 59, 0.3)',
              minWidth: '150px'
            }}>
              <div style={{ fontSize: '14px', opacity: 0.9, marginBottom: '6px', fontWeight: '500' }}>Moyenne g√©n√©rale</div>
              <div style={{ fontSize: '40px', fontWeight: '800', lineHeight: '1' }}>4,6</div>
              <div style={{ fontSize: '14px', opacity: 0.9, marginTop: '4px', fontWeight: '500' }}>/ 5</div>
            </div>
          </div>

          {/* Legend */}
          <div style={{
            background: 'rgba(255, 255, 255, 0.7)',
            backdropFilter: 'blur(16px)',
            borderRadius: '16px',
            padding: '24px',
            marginBottom: '32px',
            boxShadow: '0 6px 32px rgba(0, 0, 0, 0.06)',
            border: '1px solid rgba(255, 255, 255, 0.4)'
          }}>
            <div style={{
              display: 'flex',
              justifyContent: 'center',
              gap: '24px',
              flexWrap: 'wrap'
            }}>
              {[
                { color: '#10b981', label: '5 - Tr√®s satisfait', icon: 'üòç' },
                { color: '#3b82f6', label: '4 - Satisfait', icon: 'üòä' },
                { color: '#f59e0b', label: '3 - Neutre', icon: 'üòê' },
                { color: '#ef4444', label: '2 - Insatisfait', icon: 'üòï' },
                { color: '#64748b', label: '1 - Tr√®s insatisfait', icon: 'üòû' }
              ].map((item, index) => (
                <div key={index} style={{ 
                  display: 'flex', 
                  alignItems: 'center', 
                  gap: '10px',
                  background: 'rgba(255, 255, 255, 0.8)',
                  padding: '10px 18px',
                  borderRadius: '14px',
                  transition: 'all 0.3s ease',
                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.04)'
                }}>
                  <span style={{ fontSize: '16px' }}>{item.icon}</span>
                  <div style={{
                    width: '12px',
                    height: '12px',
                    backgroundColor: item.color,
                    borderRadius: '50%',
                    boxShadow: `0 2px 8px ${item.color}40`
                  }}></div>
                  <span style={{ fontSize: '12px', color: '#334155', fontWeight: '500' }}>{item.label}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Charts Grid */}
          <div style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))',
            gap: '24px',
            marginBottom: '32px'
          }}>
            {[
              { title: "Satisfaction g√©n√©rale", color: '#10b981' },
              { title: "Atteinte des objectifs", color: '#3b82f6' },
              { title: "Dur√©e et rythme", color: '#8b5cf6', striped: true },
              { title: "Cadre et environnement", color: '#f59e0b' },
              { title: "Pause-caf√© et restauration", color: '#ef4444' },
              { title: "Prestation du formateur", color: '#06b6d4' },
              { title: "M√©thodes p√©dagogiques", color: '#10b981' },
              { title: "Th√©orie vs pratique", color: '#8b5cf6', striped: true },
              { title: "Supports de formation", color: '#f59e0b', striped: true },
              { title: "√âchanges participants", color: '#ef4444' }
            ].map((chart, index) => (
              <ModernCircularChart 
                key={index}
                percentage={100} 
                title={chart.title}
                isStriped={chart.striped}
                color={chart.color}
              />
            ))}
          </div>

          {/* Word Cloud - Full Width */}
          <ModernWordCloud />
        </div>

        {/* Filters Panel */}
        <ModernFiltersPanel />
      </div>

      <style>{`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
        @keyframes gentleDash {
          to {
            stroke-dashoffset: -9;
          }
        }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
          width: 6px;
        }
        ::-webkit-scrollbar-track {
          background: rgba(148, 163, 184, 0.1);
          border-radius: 3px;
        }
        ::-webkit-scrollbar-thumb {
          background: rgba(148, 163, 184, 0.3);
          border-radius: 3px;
        }
        ::-webkit-scrollbar-thumb:hover {
          background: rgba(148, 163, 184, 0.5);
        }
      `}</style>
    </div>
  );
};

export default FormationEvaluationDashboard;
