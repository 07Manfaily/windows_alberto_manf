import { useState } from 'react';
import { Upload, Calendar, Users, BookOpen, X, FileText, Award, UserCheck, Folder, CheckCircle, Sparkles } from 'lucide-react';

export default function FormationForm() {
  const [formData, setFormData] = useState({
    intitule: '',
    dateDebut: '',
    dateFin: '',
    participants: '',
    fichiers: [null, null, null, null]
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleFileChange = (index, e) => {
    const file = e.target.files[0];
    if (file) {
      const newFichiers = [...formData.fichiers];
      newFichiers[index] = file;
      setFormData(prev => ({ ...prev, fichiers: newFichiers }));
    }
  };

  const removeFile = (index) => {
    const newFichiers = [...formData.fichiers];
    newFichiers[index] = null;
    setFormData(prev => ({ ...prev, fichiers: newFichiers }));
  };

  const handleSubmit = () => {
    console.log('Données du formulaire:', formData);
    alert('Formulaire soumis avec succès!');
  };

  const fileConfigs = [
    { label: 'Programme de formation', icon: FileText, color: 'from-blue-500 to-cyan-500' },
    { label: 'Convention de formation', icon: Award, color: 'from-purple-500 to-pink-500' },
    { label: 'Liste des participants', icon: UserCheck, color: 'from-green-500 to-emerald-500' },
    { label: 'Document complémentaire', icon: Folder, color: 'from-orange-500 to-red-500' }
  ];

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      padding: '3rem 1rem',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <div style={{ maxWidth: '1000px', margin: '0 auto' }}>
        <div style={{
          background: 'white',
          borderRadius: '2rem',
          boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
          overflow: 'hidden'
        }}>
          
          {/* Header */}
          <div style={{
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            padding: '3rem 2rem',
            position: 'relative',
            overflow: 'hidden'
          }}>
            <div style={{
              position: 'absolute',
              top: '-50px',
              right: '-50px',
              opacity: 0.1
            }}>
              <Sparkles style={{ width: '200px', height: '200px', color: 'white' }} />
            </div>
            <div style={{ textAlign: 'center', position: 'relative', zIndex: 1 }}>
              <div style={{ display: 'inline-block', marginBottom: '1rem' }}>
                <BookOpen style={{ width: '48px', height: '48px', color: 'white' }} />
              </div>
              <h1 style={{
                fontSize: '2.5rem',
                fontWeight: 'bold',
                color: 'white',
                margin: 0,
                marginBottom: '0.5rem'
              }}>
                Nouvelle Formation
              </h1>
              <p style={{ color: 'rgba(255, 255, 255, 0.9)', margin: 0, fontSize: '1.1rem' }}>
                Remplissez les informations de votre formation
              </p>
            </div>
          </div>

          {/* Form Content */}
          <div style={{ padding: '2.5rem' }}>
            
            {/* Intitulé */}
            <div style={{ marginBottom: '2rem' }}>
              <label style={{
                display: 'flex',
                alignItems: 'center',
                color: '#374151',
                fontWeight: '600',
                marginBottom: '0.75rem',
                fontSize: '1.1rem'
              }}>
                <div style={{
                  background: 'linear-gradient(135deg, #667eea, #764ba2)',
                  borderRadius: '0.5rem',
                  padding: '0.5rem',
                  marginRight: '0.75rem',
                  display: 'flex',
                  alignItems: 'center'
                }}>
                  <BookOpen style={{ width: '20px', height: '20px', color: 'white' }} />
                </div>
                Intitulé de la formation
              </label>
              <input
                type="text"
                name="intitule"
                value={formData.intitule}
                onChange={handleInputChange}
                placeholder="Ex: Formation en développement web"
                style={{
                  width: '100%',
                  padding: '1rem 1.25rem',
                  border: '2px solid #e5e7eb',
                  borderRadius: '1rem',
                  fontSize: '1rem',
                  outline: 'none',
                  transition: 'all 0.3s',
                  boxSizing: 'border-box'
                }}
                onFocus={(e) => e.target.style.borderColor = '#667eea'}
                onBlur={(e) => e.target.style.borderColor = '#e5e7eb'}
              />
            </div>

            {/* Dates */}
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
              gap: '1.5rem',
              marginBottom: '2rem'
            }}>
              <div>
                <label style={{
                  display: 'flex',
                  alignItems: 'center',
                  color: '#374151',
                  fontWeight: '600',
                  marginBottom: '0.75rem',
                  fontSize: '1.1rem'
                }}>
                  <div style={{
                    background: 'linear-gradient(135deg, #10b981, #059669)',
                    borderRadius: '0.5rem',
                    padding: '0.5rem',
                    marginRight: '0.75rem',
                    display: 'flex',
                    alignItems: 'center'
                  }}>
                    <Calendar style={{ width: '20px', height: '20px', color: 'white' }} />
                  </div>
                  Date de début
                </label>
                <input
                  type="date"
                  name="dateDebut"
                  value={formData.dateDebut}
                  onChange={handleInputChange}
                  style={{
                    width: '100%',
                    padding: '1rem 1.25rem',
                    border: '2px solid #e5e7eb',
                    borderRadius: '1rem',
                    fontSize: '1rem',
                    outline: 'none',
                    transition: 'all 0.3s',
                    boxSizing: 'border-box'
                  }}
                  onFocus={(e) => e.target.style.borderColor = '#10b981'}
                  onBlur={(e) => e.target.style.borderColor = '#e5e7eb'}
                />
              </div>

              <div>
                <label style={{
                  display: 'flex',
                  alignItems: 'center',
                  color: '#374151',
                  fontWeight: '600',
                  marginBottom: '0.75rem',
                  fontSize: '1.1rem'
                }}>
                  <div style={{
                    background: 'linear-gradient(135deg, #f59e0b, #d97706)',
                    borderRadius: '0.5rem',
                    padding: '0.5rem',
                    marginRight: '0.75rem',
                    display: 'flex',
                    alignItems: 'center'
                  }}>
                    <Calendar style={{ width: '20px', height: '20px', color: 'white' }} />
                  </div>
                  Date de fin
                </label>
                <input
                  type="date"
                  name="dateFin"
                  value={formData.dateFin}
                  onChange={handleInputChange}
                  style={{
                    width: '100%',
                    padding: '1rem 1.25rem',
                    border: '2px solid #e5e7eb',
                    borderRadius: '1rem',
                    fontSize: '1rem',
                    outline: 'none',
                    transition: 'all 0.3s',
                    boxSizing: 'border-box'
                  }}
                  onFocus={(e) => e.target.style.borderColor = '#f59e0b'}
                  onBlur={(e) => e.target.style.borderColor = '#e5e7eb'}
                />
              </div>
            </div>

            {/* Participants */}
            <div style={{ marginBottom: '2rem' }}>
              <label style={{
                display: 'flex',
                alignItems: 'center',
                color: '#374151',
                fontWeight: '600',
                marginBottom: '0.75rem',
                fontSize: '1.1rem'
              }}>
                <div style={{
                  background: 'linear-gradient(135deg, #ec4899, #be185d)',
                  borderRadius: '0.5rem',
                  padding: '0.5rem',
                  marginRight: '0.75rem',
                  display: 'flex',
                  alignItems: 'center'
                }}>
                  <Users style={{ width: '20px', height: '20px', color: 'white' }} />
                </div>
                Nombre de participants
              </label>
              <input
                type="number"
                name="participants"
                value={formData.participants}
                onChange={handleInputChange}
                min="1"
                placeholder="Ex: 25"
                style={{
                  width: '100%',
                  padding: '1rem 1.25rem',
                  border: '2px solid #e5e7eb',
                  borderRadius: '1rem',
                  fontSize: '1rem',
                  outline: 'none',
                  transition: 'all 0.3s',
                  boxSizing: 'border-box'
                }}
                onFocus={(e) => e.target.style.borderColor = '#ec4899'}
                onBlur={(e) => e.target.style.borderColor = '#e5e7eb'}
              />
            </div>

            {/* Documents */}
            <div style={{ marginBottom: '2rem' }}>
              <label style={{
                display: 'flex',
                alignItems: 'center',
                color: '#374151',
                fontWeight: '600',
                marginBottom: '1.5rem',
                fontSize: '1.1rem'
              }}>
                <div style={{
                  background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
                  borderRadius: '0.5rem',
                  padding: '0.5rem',
                  marginRight: '0.75rem',
                  display: 'flex',
                  alignItems: 'center'
                }}>
                  <Upload style={{ width: '20px', height: '20px', color: 'white' }} />
                </div>
                Documents à télécharger
              </label>
              
              <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
                gap: '1.5rem'
              }}>
                {fileConfigs.map((config, index) => {
                  const IconComponent = config.icon;
                  return (
                    <div key={index}>
                      <p style={{
                        fontSize: '0.9rem',
                        color: '#6b7280',
                        fontWeight: '600',
                        marginBottom: '0.5rem',
                        display: 'flex',
                        alignItems: 'center'
                      }}>
                        <IconComponent style={{ width: '16px', height: '16px', marginRight: '0.5rem' }} />
                        {config.label}
                      </p>
                      {formData.fichiers[index] ? (
                        <div style={{
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'space-between',
                          padding: '1rem',
                          background: `linear-gradient(135deg, ${config.color.split(' ')[1]}, ${config.color.split(' ')[3]})`,
                          borderRadius: '1rem',
                          color: 'white'
                        }}>
                          <div style={{ display: 'flex', alignItems: 'center', flex: 1, minWidth: 0 }}>
                            <CheckCircle style={{ width: '20px', height: '20px', marginRight: '0.5rem', flexShrink: 0 }} />
                            <span style={{
                              fontSize: '0.875rem',
                              fontWeight: '500',
                              overflow: 'hidden',
                              textOverflow: 'ellipsis',
                              whiteSpace: 'nowrap'
                            }}>
                              {formData.fichiers[index].name}
                            </span>
                          </div>
                          <button
                            type="button"
                            onClick={() => removeFile(index)}
                            style={{
                              marginLeft: '0.5rem',
                              background: 'rgba(255, 255, 255, 0.3)',
                              border: 'none',
                              borderRadius: '0.5rem',
                              padding: '0.5rem',
                              cursor: 'pointer',
                              display: 'flex',
                              alignItems: 'center',
                              transition: 'all 0.2s'
                            }}
                            onMouseEnter={(e) => e.target.style.background = 'rgba(255, 255, 255, 0.5)'}
                            onMouseLeave={(e) => e.target.style.background = 'rgba(255, 255, 255, 0.3)'}
                          >
                            <X style={{ width: '18px', height: '18px', color: 'white' }} />
                          </button>
                        </div>
                      ) : (
                        <label style={{
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          padding: '1.25rem',
                          border: '2px dashed #d1d5db',
                          borderRadius: '1rem',
                          cursor: 'pointer',
                          transition: 'all 0.3s',
                          background: 'white'
                        }}
                        onMouseEnter={(e) => {
                          e.currentTarget.style.borderColor = config.color.split(' ')[1].replace('from-', '').replace('to-', '');
                          e.currentTarget.style.background = '#f9fafb';
                        }}
                        onMouseLeave={(e) => {
                          e.currentTarget.style.borderColor = '#d1d5db';
                          e.currentTarget.style.background = 'white';
                        }}>
                          <Upload style={{ width: '20px', height: '20px', color: '#9ca3af', marginRight: '0.5rem' }} />
                          <span style={{ fontSize: '0.875rem', color: '#6b7280', fontWeight: '500' }}>
                            Choisir un fichier
                          </span>
                          <input
                            type="file"
                            onChange={(e) => handleFileChange(index, e)}
                            style={{ display: 'none' }}
                          />
                        </label>
                      )}
                    </div>
                  );
                })}
              </div>
            </div>

            {/* Submit Button */}
            <button
              onClick={handleSubmit}
              style={{
                width: '100%',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                color: 'white',
                fontWeight: 'bold',
                fontSize: '1.125rem',
                padding: '1.25rem',
                borderRadius: '1rem',
                border: 'none',
                cursor: 'pointer',
                transition: 'all 0.3s',
                boxShadow: '0 10px 25px -5px rgba(102, 126, 234, 0.5)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}
              onMouseEnter={(e) => {
                e.target.style.transform = 'translateY(-2px)';
                e.target.style.boxShadow = '0 20px 35px -5px rgba(102, 126, 234, 0.6)';
              }}
              onMouseLeave={(e) => {
                e.target.style.transform = 'translateY(0)';
                e.target.style.boxShadow = '0 10px 25px -5px rgba(102, 126, 234, 0.5)';
              }}
            >
              <CheckCircle style={{ width: '24px', height: '24px', marginRight: '0.5rem' }} />
              Enregistrer la formation
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
