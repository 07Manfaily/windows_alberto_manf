import { useState } from 'react';
import { ChevronLeft, ChevronRight, Calendar } from 'lucide-react';

export default function YearSelector() {
  const currentYear = new Date().getFullYear();
  const years = Array.from({ length: 50 }, (_, i) => currentYear - 25 + i);
  
  const [selectedYear, setSelectedYear] = useState(currentYear);
  const [showDropdown, setShowDropdown] = useState(false);

  const handlePrevious = () => {
    setSelectedYear(prev => Math.max(prev - 1, years[0]));
  };

  const handleNext = () => {
    setSelectedYear(prev => Math.min(prev + 1, years[years.length - 1]));
  };

  const handleYearSelect = (year) => {
    setSelectedYear(year);
    setShowDropdown(false);
  };

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
      padding: '20px'
    }}>
      <div style={{
        position: 'relative'
      }}>
        {/* Composant principal */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.95)',
          backdropFilter: 'blur(10px)',
          borderRadius: '24px',
          padding: '40px 60px',
          boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',
          display: 'flex',
          alignItems: 'center',
          gap: '30px',
          minWidth: '400px',
          position: 'relative'
        }}>
          {/* Bouton Précédent */}
          <button
            onClick={handlePrevious}
            disabled={selectedYear === years[0]}
            style={{
              width: '50px',
              height: '50px',
              borderRadius: '50%',
              border: 'none',
              background: selectedYear === years[0] 
                ? 'linear-gradient(135deg, #e0e0e0 0%, #d0d0d0 100%)'
                : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
              cursor: selectedYear === years[0] ? 'not-allowed' : 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              transition: 'all 0.3s ease',
              boxShadow: '0 4px 15px rgba(102, 126, 234, 0.4)',
              opacity: selectedYear === years[0] ? 0.5 : 1
            }}
            onMouseEnter={(e) => {
              if (selectedYear !== years[0]) {
                e.currentTarget.style.transform = 'scale(1.1) translateY(-2px)';
                e.currentTarget.style.boxShadow = '0 6px 20px rgba(102, 126, 234, 0.6)';
              }
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.transform = 'scale(1) translateY(0)';
              e.currentTarget.style.boxShadow = '0 4px 15px rgba(102, 126, 234, 0.4)';
            }}
          >
            <ChevronLeft size={24} />
          </button>

          {/* Année centrale cliquable */}
          <button
            onClick={() => setShowDropdown(!showDropdown)}
            style={{
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              border: 'none',
              borderRadius: '16px',
              padding: '20px 40px',
              fontSize: '42px',
              fontWeight: '700',
              color: 'white',
              cursor: 'pointer',
              transition: 'all 0.3s ease',
              boxShadow: '0 8px 25px rgba(102, 126, 234, 0.5)',
              minWidth: '180px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '12px'
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.transform = 'scale(1.05)';
              e.currentTarget.style.boxShadow = '0 12px 35px rgba(102, 126, 234, 0.6)';
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.transform = 'scale(1)';
              e.currentTarget.style.boxShadow = '0 8px 25px rgba(102, 126, 234, 0.5)';
            }}
          >
            {selectedYear}
            <Calendar size={28} />
          </button>

          {/* Bouton Suivant */}
          <button
            onClick={handleNext}
            disabled={selectedYear === years[years.length - 1]}
            style={{
              width: '50px',
              height: '50px',
              borderRadius: '50%',
              border: 'none',
              background: selectedYear === years[years.length - 1]
                ? 'linear-gradient(135deg, #e0e0e0 0%, #d0d0d0 100%)'
                : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
              cursor: selectedYear === years[years.length - 1] ? 'not-allowed' : 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              transition: 'all 0.3s ease',
              boxShadow: '0 4px 15px rgba(102, 126, 234, 0.4)',
              opacity: selectedYear === years[years.length - 1] ? 0.5 : 1
            }}
            onMouseEnter={(e) => {
              if (selectedYear !== years[years.length - 1]) {
                e.currentTarget.style.transform = 'scale(1.1) translateY(-2px)';
                e.currentTarget.style.boxShadow = '0 6px 20px rgba(102, 126, 234, 0.6)';
              }
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.transform = 'scale(1) translateY(0)';
              e.currentTarget.style.boxShadow = '0 4px 15px rgba(102, 126, 234, 0.4)';
            }}
          >
            <ChevronRight size={24} />
          </button>
        </div>

        {/* Liste déroulante */}
        {showDropdown && (
          <div style={{
            position: 'absolute',
            top: 'calc(100% + 20px)',
            left: '50%',
            transform: 'translateX(-50%)',
            background: 'rgba(255, 255, 255, 0.98)',
            backdropFilter: 'blur(10px)',
            borderRadius: '20px',
            padding: '20px',
            boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',
            maxHeight: '400px',
            overflowY: 'auto',
            minWidth: '300px',
            animation: 'slideDown 0.3s ease',
            zIndex: 1000
          }}>
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(3, 1fr)',
              gap: '12px'
            }}>
              {years.map((year) => (
                <button
                  key={year}
                  onClick={() => handleYearSelect(year)}
                  style={{
                    padding: '14px 20px',
                    border: 'none',
                    borderRadius: '12px',
                    background: year === selectedYear
                      ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
                      : 'linear-gradient(135deg, #f5f7fa 0%, #e9ecef 100%)',
                    color: year === selectedYear ? 'white' : '#333',
                    cursor: 'pointer',
                    fontSize: '16px',
                    fontWeight: year === selectedYear ? '700' : '500',
                    transition: 'all 0.2s ease',
                    boxShadow: year === selectedYear 
                      ? '0 4px 12px rgba(102, 126, 234, 0.4)'
                      : 'none'
                  }}
                  onMouseEnter={(e) => {
                    if (year !== selectedYear) {
                      e.currentTarget.style.background = 'linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%)';
                      e.currentTarget.style.transform = 'scale(1.05)';
                    }
                  }}
                  onMouseLeave={(e) => {
                    if (year !== selectedYear) {
                      e.currentTarget.style.background = 'linear-gradient(135deg, #f5f7fa 0%, #e9ecef 100%)';
                      e.currentTarget.style.transform = 'scale(1)';
                    }
                  }}
                >
                  {year}
                </button>
              ))}
            </div>
          </div>
        )}

        {/* Animation CSS */}
        <style>{`
          @keyframes slideDown {
            from {
              opacity: 0;
              transform: translateX(-50%) translateY(-10px);
            }
            to {
              opacity: 1;
              transform: translateX(-50%) translateY(0);
            }
          }
          
          div::-webkit-scrollbar {
            width: 8px;
          }
          
          div::-webkit-scrollbar-track {
            background: transparent;
          }
          
          div::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 10px;
          }
        `}</style>
      </div>

      {/* Affichage de l'année sélectionnée */}
      <div style={{
        position: 'fixed',
        top: '40px',
        left: '50%',
        transform: 'translateX(-50%)',
        background: 'rgba(255, 255, 255, 0.9)',
        padding: '16px 32px',
        borderRadius: '50px',
        boxShadow: '0 8px 25px rgba(0, 0, 0, 0.2)',
        fontSize: '18px',
        fontWeight: '600',
        color: '#333'
      }}>
        Année sélectionnée : <span style={{ 
          color: '#667eea',
          fontWeight: '700'
        }}>{selectedYear}</span>
      </div>
    </div>
  );
}
